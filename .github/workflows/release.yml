# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Build with Maven
        run: mvn clean verify

  sonar:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: github
          settings-path: ${{ github.workspace }}
      # Make sure automatic scanning of the project in sonarcloud UI is disable. It can only do via pull or push
      - name: Sonar Cloud scan
        env:
          sonar.projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
          sonar.organization: ${{ secrets.SONAR_ORG }}
          sonar.host.url: https://sonarcloud.io
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  docker:
    needs: sonar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Prepare variables
        id: vars
        run: |
          mvn -Dmaven.test.skip=true package jib:build -Djib.to.auth.username=${{ secrets.DOCKERHUB_USERNAME }} -Djib.to.auth.password=${{ secrets.DOCKERHUB_PASSWORD }}




